import { buildThemeExtensions, buildUIExtensions, buildFunctionExtension } from './build/extension.js';
import buildWeb from './web.js';
import { installAppDependencies } from './dependencies.js';
import { output } from '@shopify/cli-kit';
async function build({ app, skipDependenciesInstallation, apiKey = undefined }) {
    if (!skipDependenciesInstallation) {
        await installAppDependencies(app);
    }
    const env = {};
    if (apiKey) {
        env.SHOPIFY_API_KEY = apiKey;
    }
    await output.concurrent([
        ...app.webs.map((web) => {
            return {
                prefix: web.configuration.type,
                action: async (stdout, stderr, signal) => {
                    await buildWeb('build', { web, stdout, stderr, signal, env });
                },
            };
        }),
        {
            prefix: 'theme_extensions',
            action: async (stdout, stderr, signal) => {
                await buildThemeExtensions({
                    app,
                    extensions: app.extensions.theme,
                    stdout,
                    stderr,
                    signal,
                });
            },
        },
        {
            prefix: 'extensions',
            action: async (stdout, stderr, signal) => {
                await buildUIExtensions({
                    app,
                    extensions: app.extensions.ui,
                    stdout,
                    stderr,
                    signal,
                });
            },
        },
        ...app.extensions.function.map((functionExtension) => {
            return {
                prefix: functionExtension.localIdentifier,
                action: async (stdout, stderr, signal) => {
                    await buildFunctionExtension(functionExtension, { stdout, stderr, signal, app });
                },
            };
        }),
    ]);
    output.newline();
    output.success(`${app.name} built`);
}
export default build;
//# sourceMappingURL=build.js.map