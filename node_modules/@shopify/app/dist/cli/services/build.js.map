{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/services/build.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAE,iBAAiB,EAAE,sBAAsB,EAAC,MAAM,sBAAsB,CAAA;AACpG,OAAO,QAAQ,MAAM,UAAU,CAAA;AAC/B,OAAO,EAAC,sBAAsB,EAAC,MAAM,mBAAmB,CAAA;AAExD,OAAO,EAAQ,MAAM,EAAC,MAAM,kBAAkB,CAAA;AAS9C,KAAK,UAAU,KAAK,CAAC,EAAC,GAAG,EAAE,4BAA4B,EAAE,MAAM,GAAG,SAAS,EAAe;IACxF,IAAI,CAAC,4BAA4B,EAAE;QACjC,MAAM,sBAAsB,CAAC,GAAG,CAAC,CAAA;KAClC;IAED,MAAM,GAAG,GAA+B,EAAE,CAAA;IAC1C,IAAI,MAAM,EAAE;QACV,GAAG,CAAC,eAAe,GAAG,MAAM,CAAA;KAC7B;IAED,MAAM,MAAM,CAAC,UAAU,CAAC;QACtB,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC3B,OAAO;gBACL,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI;gBAC9B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;oBAC9E,MAAM,QAAQ,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;gBAC7D,CAAC;aACF,CAAA;QACH,CAAC,CAAC;QACF;YACE,MAAM,EAAE,kBAAkB;YAC1B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;gBAC9E,MAAM,oBAAoB,CAAC;oBACzB,GAAG;oBACH,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,KAAK;oBAChC,MAAM;oBACN,MAAM;oBACN,MAAM;iBACP,CAAC,CAAA;YACJ,CAAC;SACF;QACD;YACE,MAAM,EAAE,YAAY;YACpB,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;gBAC9E,MAAM,iBAAiB,CAAC;oBACtB,GAAG;oBACH,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;oBAC7B,MAAM;oBACN,MAAM;oBACN,MAAM;iBACP,CAAC,CAAA;YACJ,CAAC;SACF;QACD,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,EAAE;YACnD,OAAO;gBACL,MAAM,EAAE,iBAAiB,CAAC,eAAe;gBACzC,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;oBAC9E,MAAM,sBAAsB,CAAC,iBAAiB,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;gBAChF,CAAC;aACF,CAAA;QACH,CAAC,CAAC;KACH,CAAC,CAAA;IAEF,MAAM,CAAC,OAAO,EAAE,CAAA;IAChB,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAA;AACrC,CAAC;AAED,eAAe,KAAK,CAAA","sourcesContent":["import {buildThemeExtensions, buildUIExtensions, buildFunctionExtension} from './build/extension.js'\nimport buildWeb from './web.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {AppInterface, Web} from '../models/app/app.js'\nimport {error, output} from '@shopify/cli-kit'\nimport {Writable} from 'node:stream'\n\ninterface BuildOptions {\n  app: AppInterface\n  skipDependenciesInstallation: boolean\n  apiKey?: string\n}\n\nasync function build({app, skipDependenciesInstallation, apiKey = undefined}: BuildOptions) {\n  if (!skipDependenciesInstallation) {\n    await installAppDependencies(app)\n  }\n\n  const env: {SHOPIFY_API_KEY?: string} = {}\n  if (apiKey) {\n    env.SHOPIFY_API_KEY = apiKey\n  }\n\n  await output.concurrent([\n    ...app.webs.map((web: Web) => {\n      return {\n        prefix: web.configuration.type,\n        action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n          await buildWeb('build', {web, stdout, stderr, signal, env})\n        },\n      }\n    }),\n    {\n      prefix: 'theme_extensions',\n      action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n        await buildThemeExtensions({\n          app,\n          extensions: app.extensions.theme,\n          stdout,\n          stderr,\n          signal,\n        })\n      },\n    },\n    {\n      prefix: 'extensions',\n      action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n        await buildUIExtensions({\n          app,\n          extensions: app.extensions.ui,\n          stdout,\n          stderr,\n          signal,\n        })\n      },\n    },\n    ...app.extensions.function.map((functionExtension) => {\n      return {\n        prefix: functionExtension.localIdentifier,\n        action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n          await buildFunctionExtension(functionExtension, {stdout, stderr, signal, app})\n        },\n      }\n    }),\n  ])\n\n  output.newline()\n  output.success(`${app.name} built`)\n}\n\nexport default build\n"]}