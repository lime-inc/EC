{"version":3,"file":"identifiers.js","sourceRoot":"","sources":["../../../../src/cli/services/environment/identifiers.ts"],"names":[],"mappings":"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","sourcesContent":["import {automaticMatchmaking} from './id-matching.js'\nimport {manualMatchIds} from './id-manual-matching.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {Identifiers} from '../../models/app/identifiers.js'\nimport {Extension} from '../../models/app/extensions.js'\nimport {fetchAppExtensionRegistrations} from '../dev/fetch.js'\nimport {createExtension} from '../dev/create-extension.js'\nimport {error, output, session, ui} from '@shopify/cli-kit'\nimport {PackageManager} from '@shopify/cli-kit/node/node-package-manager'\n\nconst DeployError = (appName: string, packageManager: PackageManager) => {\n  return new error.Abort(\n    `Deployment failed because this local project doesn't seem to match the app \"${appName}\" in Shopify Partners.`,\n    `• If you didn't intend to select this app, run ${\n      output.content`${output.token.packagejsonScript(packageManager, 'deploy', '--reset')}`.value\n    }\n• If this is the app you intended, check your local project and make sure\n  it contains the same number and types of extensions as the Shopify app\n  you've selected. You may need to scaffold missing extensions.`,\n  )\n}\n\nexport interface EnsureDeploymentIdsPresenceOptions {\n  app: AppInterface\n  token: string\n  appId: string\n  appName: string\n  envIdentifiers: Partial<Identifiers>\n}\n\ninterface ExtensionRegistration {\n  uuid: string\n  type: string\n  id: string\n  title: string\n}\n\nexport async function ensureDeploymentIdsPresence(options: EnsureDeploymentIdsPresenceOptions): Promise<Identifiers> {\n  // All initial values both remote and local\n  const remoteSpecifications = await fetchAppExtensionRegistrations({token: options.token, apiKey: options.appId})\n  const remoteRegistrations: ExtensionRegistration[] = remoteSpecifications.app.extensionRegistrations\n  const validIdentifiers = options.envIdentifiers.extensions ?? {}\n  const functionLocalIdentifiers = Object.fromEntries(\n    options.app.extensions.function\n      .map((extension) => extension.localIdentifier)\n      .map((extensionIdentifier) => {\n        return validIdentifiers[extensionIdentifier]\n          ? [extensionIdentifier, validIdentifiers[extensionIdentifier]]\n          : undefined\n      })\n      .filter((entry) => entry !== undefined) as string[][],\n  )\n  const localExtensions: Extension[] = [...options.app.extensions.ui, ...options.app.extensions.theme]\n\n  const GenericError = () => DeployError(options.appName, options.app.packageManager)\n\n  // We need local extensions to deploy\n  if (localExtensions.length === 0) {\n    return {\n      app: options.appId,\n      extensions: {...functionLocalIdentifiers},\n      // Numeric extension IDs aren't relevant for functions\n      extensionIds: {},\n    }\n  }\n\n  // If there are more remote extensions than local, then something is missing and we can't continue\n  if (remoteRegistrations.length > localExtensions.length) {\n    throw GenericError()\n  }\n\n  const match = await automaticMatchmaking(localExtensions, remoteRegistrations, validIdentifiers)\n\n  if (match.result === 'invalid-environment') {\n    throw GenericError()\n  }\n  let validMatches = match.identifiers ?? {}\n  const validMatchesById: {[key: string]: string} = {}\n\n  if (match.pendingConfirmation.length > 0) {\n    for (const pending of match.pendingConfirmation) {\n      // eslint-disable-next-line no-await-in-loop\n      const confirmed = await matchConfirmationPrompt(pending.extension, pending.registration)\n      if (!confirmed) throw new error.CancelExecution()\n      validMatches[pending.extension.localIdentifier] = pending.registration.uuid\n    }\n  }\n\n  const extensionsToCreate = match.toCreate ?? []\n\n  if (match.toManualMatch.local.length > 0) {\n    const matchResult = await manualMatchIds(match.toManualMatch.local, match.toManualMatch.remote)\n    if (matchResult.result === 'pending-remote') throw GenericError()\n    validMatches = {...validMatches, ...matchResult.identifiers}\n    extensionsToCreate.push(...matchResult.toCreate)\n  }\n\n  if (extensionsToCreate.length > 0) {\n    const newIdentifiers = await createExtensions(extensionsToCreate, options.appId)\n    for (const [localIdentifier, registration] of Object.entries(newIdentifiers)) {\n      validMatches[localIdentifier] = registration.uuid\n      validMatchesById[localIdentifier] = registration.id\n    }\n  }\n\n  for (const [localIdentifier, uuid] of Object.entries(validMatches)) {\n    const registration = remoteRegistrations.find((registration) => registration.uuid === uuid)\n    if (registration) validMatchesById[localIdentifier] = registration.id\n  }\n\n  return {\n    app: options.appId,\n    extensions: {...validMatches, ...functionLocalIdentifiers},\n    extensionIds: validMatchesById,\n  }\n}\n\nasync function createExtensions(extensions: Extension[], appId: string) {\n  // PENDING: Function extensions can't be created before being deployed we'll need to handle that differently\n  const token = await session.ensureAuthenticatedPartners()\n  const result: {[localIdentifier: string]: ExtensionRegistration} = {}\n  for (const extension of extensions) {\n    // eslint-disable-next-line no-await-in-loop\n    const registration = await createExtension(appId, extension.type, extension.localIdentifier, token)\n    output.completed(`Created extension ${extension.localIdentifier}.`)\n    result[extension.localIdentifier] = registration\n  }\n  return result\n}\n\nasync function matchConfirmationPrompt(extension: Extension, registration: ExtensionRegistration) {\n  const choices = [\n    {name: `Yes, that's right`, value: 'yes'},\n    {name: `No, cancel deployment`, value: 'no'},\n  ]\n  const choice: {value: string} = await ui.prompt([\n    {\n      type: 'select',\n      name: 'value',\n      message: `Deploy ${extension.localIdentifier} (local name) as ${registration.title} (name on Shopify Partners, ID: ${registration.id})?`,\n      choices,\n    },\n  ])\n  return choice.value === 'yes'\n}\n"]}