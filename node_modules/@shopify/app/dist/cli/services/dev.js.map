{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../src/cli/services/dev.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAC,MAAM,kBAAkB,CAAA;AACrD,OAAO,EAAC,oBAAoB,EAAE,WAAW,EAAE,OAAO,EAAE,wBAAwB,EAAE,UAAU,EAAC,MAAM,eAAe,CAAA;AAC9G,OAAO,EAAC,sBAAsB,EAAC,MAAM,mBAAmB,CAAA;AACxD,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAA;AAChD,OAAO,EAAC,YAAY,EAAE,wBAAwB,EAAE,sBAAsB,EAAC,MAAM,iBAAiB,CAAA;AAC9F,OAAO,EAEL,+CAA+C,GAChD,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAAsC,OAAO,EAAC,MAAM,sBAAsB,CAAA;AAEjF,OAAO,EAAC,mBAAmB,EAAC,MAAM,kDAAkD,CAAA;AACpF,OAAO,EAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,MAAM,kBAAkB,CAAA;AA0BhF,KAAK,UAAU,GAAG,CAAC,OAAmB;IACpC,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE;QACzC,6CAA6C;QAC7C,OAAO,GAAG;YACR,GAAG,OAAO;YACV,GAAG,EAAE,MAAM,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC;SAC/C,CAAA;KACF;IACD,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,2BAA2B,EAAE,CAAA;IACzD,MAAM,EAAC,WAAW,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,gBAAgB,EAAC,GAAG,MAAM,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;IAC9G,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAA;IAE9B,IAAI,YAAoB,CAAA;IACxB,IAAI,WAAmB,CAAA;IAEvB,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,EAAE;QAC7B,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAA;QACzC,WAAW,GAAG,kBAAkB,CAAA;KACjC;SAAM,IAAI,OAAO,CAAC,SAAS,EAAE;QAC5B,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAA;QACrE,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,uBAAuB,OAAO,CAAC,SAAS,EAAE,EAAE,4CAA4C,CAAC,CAAA;SAChH;QACD,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;QACjC,WAAW,GAAG,OAAO,CAAC,CAAC,CAAE,CAAA;KAC1B;SAAM;QACL,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAA;QACzC,WAAW,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAA;KACrE;IAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAA;IAE9C,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,aAAa,EAAC,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAA;IAC1G,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,aAAa,EAAC,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,OAAO,CAAC,CAAA;IAExG,qEAAqE;IACrE,MAAM,UAAU,GAAG,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,WAAW,IAAI,YAAY,EAAE,CAAC,CAAC,CAAC,WAAW,CAAA;IAC7F,IAAI,CAAC,cAAc,IAAI,aAAa,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;QACvD,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAChD,MAAM,OAAO,GAAG,oBAAoB,CAAC,UAAU,CAAC,CAAA;QAChD,MAAM,YAAY,GAAY,MAAM,wBAAwB,CAAC;YAC3D,WAAW;YACX,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;YACnC,gBAAgB;YAChB,MAAM,EAAE,GAAG,CAAC,MAAM;SACnB,CAAC,CAAA;QACF,IAAI,YAAY;YAAE,MAAM,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;QAC1D,sBAAsB,CAAC,YAAY,EAAE,OAAO,EAAE,GAAG,CAAC,CAAA;QAClD,YAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;KACpC;IAED,4EAA4E;IAC5E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAA;IAEtH,MAAM,cAAc,GAAG;QACrB,MAAM;QACN,WAAW;QACX,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM;QACxC,SAAS,EAAG,GAAG,CAAC,SAAoB,IAAI,EAAE;QAC1C,QAAQ,EAAE,UAAU;KACrB,CAAA;IAED,MAAM,YAAY,GAA6B,EAAE,CAAA;IACjD,MAAM,QAAQ,GAAG,WAAW,CAAA;IAC5B,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,YAAY,CAAA;IACvF,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;QACxC,MAAM,MAAM,GAAG,MAAM,mBAAmB,CACtC,OAAO,CAAC,GAAG,EACX,MAAM,EACN,QAAQ,EACR,SAAS,EACT,OAAO,CAAC,sBAAsB,EAC9B,OAAO,CAAC,eAAe,CACxB,CAAA;QACD,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;KAC1B;IAED,wBAAwB,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;IAEnH,MAAM,mBAAmB,GAA2B,EAAE,CAAA;IACtD,IAAI,aAAa,EAAE;QACjB,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,CAAA;KAC1E;IAED,IAAI,cAAc,EAAE;QAClB,MAAM,WAAW,GAAG,iBAAiB,CAAC;YACpC,GAAG,EAAE,cAAc;YACnB,MAAM;YACN,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM;YACxC,SAAS,EAAG,GAAG,CAAC,SAAoB,IAAI,EAAE;YAC1C,QAAQ,EAAE,WAAW;YACrB,WAAW;SACZ,CAAC,CAAA;QACF,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,MAAM,mBAAmB,GAAG;gBAC1B,MAAM,EAAE,WAAW,CAAC,SAAS;gBAC7B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;oBAC9E,MAAM,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC,CAAA;gBAChE,CAAC;aACF,CAAA;YACD,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;SAC9C;aAAM;YACL,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;SAC/B;KACF;IAED,MAAM,SAAS,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,OAAO,CAAC,aAAa,EAAC,CAAC,CAAA;IAE5D,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;QAC7B,MAAM,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAA;KAC7C;SAAM;QACL,MAAM,+CAA+C,CAAC,SAAS,EAAE,YAAY,EAAE,mBAAmB,CAAC,CAAA;KACpG;AACH,CAAC;AAOD,SAAS,iBAAiB,CAAC,OAAiC;IAC1D,MAAM,EAAC,QAAQ,EAAC,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAA;IAC5C,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG;QACV,eAAe,EAAE,OAAO,CAAC,MAAM;QAC/B,kBAAkB,EAAE,OAAO,CAAC,SAAS;QACrC,IAAI,EAAE,OAAO,CAAC,QAAQ;QACtB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,YAAY,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE;QACtC,QAAQ,EAAE,aAAa;KACxB,CAAA;IAED,OAAO;QACL,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI;QACzC,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,IAAY,EAAE,EAAE;YAC5F,MAAM,MAAM,CAAC,IAAI,CAAC,GAAI,EAAE,IAAI,EAAE;gBAC5B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;gBAC1B,MAAM;gBACN,MAAM;gBACN,GAAG,EAAE;oBACH,GAAG,OAAO,CAAC,GAAG;oBACd,GAAG,GAAG;oBACN,IAAI,EAAE,GAAG,IAAI,EAAE;oBACf,aAAa,EAAE,GAAG,IAAI,EAAE;oBACxB,OAAO,EAAE,OAAO,CAAC,QAAQ;oBACzB,OAAO,EAAE,aAAa;oBACtB,oFAAoF;oBACpF,WAAW,EAAE,GAAG,IAAI,EAAE;iBACvB;gBACD,MAAM;aACP,CAAC,CAAA;QACJ,CAAC;KACF,CAAA;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAQ,EAAE,OAAsB;IACxD,MAAM,EAAC,QAAQ,EAAC,GAAG,GAAG,CAAC,aAAa,CAAA;IACpC,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG;QACV,eAAe,EAAE,OAAO,CAAC,MAAM;QAC/B,kBAAkB,EAAE,OAAO,CAAC,SAAS;QACrC,IAAI,EAAE,OAAO,CAAC,QAAQ;QACtB,6CAA6C;QAC7C,IAAI,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE;QAC9B,WAAW,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE;QACrC,YAAY,EAAE,GAAG,OAAO,CAAC,WAAW,EAAE;QACtC,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,QAAQ,EAAE,aAAa;KACxB,CAAA;IAED,OAAO;QACL,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI;QAC9B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,EAAE;YAC9E,MAAM,MAAM,CAAC,IAAI,CAAC,GAAI,EAAE,IAAI,EAAE;gBAC5B,GAAG,EAAE,GAAG,CAAC,SAAS;gBAClB,MAAM;gBACN,MAAM;gBACN,MAAM;gBACN,GAAG,EAAE;oBACH,GAAG,OAAO,CAAC,GAAG;oBACd,GAAG,GAAG;iBACP;aACF,CAAC,CAAA;QACJ,CAAC;KACF,CAAA;AACH,CAAC;AAED,KAAK,UAAU,mBAAmB,CAChC,GAAiB,EACjB,MAAc,EACd,GAAW,EACX,SAAiB,EACjB,sBAA+B,EAC/B,eAAwB;IAExB,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,SAAS,EAAE,eAAe,CAAC,CAAA;IACzF,OAAO;QACL,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAyB,EAAE,IAAY,EAAE,EAAE;YAC5F,MAAM,aAAa,CAAC;gBAClB,GAAG;gBACH,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC7B,MAAM;gBACN,MAAM;gBACN,MAAM;gBACN,GAAG;gBACH,IAAI;gBACJ,SAAS;gBACT,MAAM;gBACN,OAAO;gBACP,sBAAsB;aACvB,CAAC,CAAA;QACJ,CAAC;KACF,CAAA;AACH,CAAC;AAED;;;;GAIG;AACH,KAAK,UAAU,oBAAoB,CAAC,UAAyB,EAAE,KAAa,EAAE,eAAwB;IACpG,MAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAA;IAC1F,IAAI,CAAC,cAAc;QAAE,OAAO,SAAS,CAAA;IACrC,IAAI,eAAe;QAAE,OAAO,eAAe,CAAA;IAC3C,MAAM,SAAS,GAAG,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAA;IAClD,OAAO,SAAS,SAAS,IAAI,CAAA;AAC/B,CAAC;AAED,eAAe,GAAG,CAAA","sourcesContent":["import {ensureDevEnvironment} from './environment.js'\nimport {generatePartnersURLs, generateURL, getURLs, shouldOrPromptUpdateURLs, updateURLs} from './dev/urls.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {devExtensions} from './dev/extension.js'\nimport {outputAppURL, outputExtensionsMessages, outputUpdateURLsResult} from './dev/output.js'\nimport {\n  ReverseHTTPProxyTarget,\n  runConcurrentHTTPProcessesAndPathForwardTraffic,\n} from '../utilities/app/http-reverse-proxy.js'\nimport {AppInterface, AppConfiguration, Web, WebType} from '../models/app/app.js'\nimport {UIExtension} from '../models/app/extensions.js'\nimport {fetchProductVariant} from '../utilities/extensions/fetch-product-variant.js'\nimport {error, analytics, output, port, system, session} from '@shopify/cli-kit'\nimport {Config} from '@oclif/core'\nimport {Writable} from 'node:stream'\n\nexport interface DevOptions {\n  app: AppInterface\n  apiKey?: string\n  storeFqdn?: string\n  reset: boolean\n  update: boolean\n  commandConfig: Config\n  skipDependenciesInstallation: boolean\n  subscriptionProductUrl?: string\n  checkoutCartUrl?: string\n  tunnelUrl?: string\n  noTunnel: boolean\n}\n\ninterface DevWebOptions {\n  backendPort: number\n  apiKey: string\n  apiSecret?: string\n  hostname?: string\n  scopes?: AppConfiguration['scopes']\n}\n\nasync function dev(options: DevOptions) {\n  if (!options.skipDependenciesInstallation) {\n    // eslint-disable-next-line no-param-reassign\n    options = {\n      ...options,\n      app: await installAppDependencies(options.app),\n    }\n  }\n  const token = await session.ensureAuthenticatedPartners()\n  const {identifiers, storeFqdn, app, updateURLs: cachedUpdateURLs} = await ensureDevEnvironment(options, token)\n  const apiKey = identifiers.app\n\n  let frontendPort: number\n  let frontendUrl: string\n\n  if (options.noTunnel === true) {\n    frontendPort = await port.getRandomPort()\n    frontendUrl = 'http://localhost'\n  } else if (options.tunnelUrl) {\n    const matches = options.tunnelUrl.match(/(https:\\/\\/[^:]+):([0-9]+)/)\n    if (!matches) {\n      throw new error.Abort(`Invalid tunnel URL: ${options.tunnelUrl}`, 'Valid format: \"https://my-tunnel-url:port\"')\n    }\n    frontendPort = Number(matches[2])\n    frontendUrl = matches[1]!\n  } else {\n    frontendPort = await port.getRandomPort()\n    frontendUrl = await generateURL(options.commandConfig, frontendPort)\n  }\n\n  const backendPort = await port.getRandomPort()\n\n  const frontendConfig = options.app.webs.find(({configuration}) => configuration.type === WebType.Frontend)\n  const backendConfig = options.app.webs.find(({configuration}) => configuration.type === WebType.Backend)\n\n  /** If the app doesn't have web/ the link message is not necessary */\n  const exposedUrl = options.noTunnel === true ? `${frontendUrl}:${frontendPort}` : frontendUrl\n  if ((frontendConfig || backendConfig) && options.update) {\n    const currentURLs = await getURLs(apiKey, token)\n    const newURLs = generatePartnersURLs(exposedUrl)\n    const shouldUpdate: boolean = await shouldOrPromptUpdateURLs({\n      currentURLs,\n      appDirectory: options.app.directory,\n      cachedUpdateURLs,\n      newApp: app.newApp,\n    })\n    if (shouldUpdate) await updateURLs(newURLs, apiKey, token)\n    outputUpdateURLsResult(shouldUpdate, newURLs, app)\n    outputAppURL(storeFqdn, exposedUrl)\n  }\n\n  // If we have a real UUID for an extension, use that instead of a random one\n  options.app.extensions.ui.forEach((ext) => (ext.devUUID = identifiers.extensions[ext.localIdentifier] ?? ext.devUUID))\n\n  const backendOptions = {\n    apiKey,\n    backendPort,\n    scopes: options.app.configuration.scopes,\n    apiSecret: (app.apiSecret as string) ?? '',\n    hostname: exposedUrl,\n  }\n\n  const proxyTargets: ReverseHTTPProxyTarget[] = []\n  const proxyUrl = frontendUrl\n  const proxyPort = options.noTunnel === true ? await port.getRandomPort() : frontendPort\n  if (options.app.extensions.ui.length > 0) {\n    const devExt = await devExtensionsTarget(\n      options.app,\n      apiKey,\n      proxyUrl,\n      storeFqdn,\n      options.subscriptionProductUrl,\n      options.checkoutCartUrl,\n    )\n    proxyTargets.push(devExt)\n  }\n\n  outputExtensionsMessages(options.app, storeFqdn, options.noTunnel === true ? `${proxyUrl}:${proxyPort}` : proxyUrl)\n\n  const additionalProcesses: output.OutputProcess[] = []\n  if (backendConfig) {\n    additionalProcesses.push(devBackendTarget(backendConfig, backendOptions))\n  }\n\n  if (frontendConfig) {\n    const devFrontend = devFrontendTarget({\n      web: frontendConfig,\n      apiKey,\n      scopes: options.app.configuration.scopes,\n      apiSecret: (app.apiSecret as string) ?? '',\n      hostname: frontendUrl,\n      backendPort,\n    })\n    if (options.noTunnel) {\n      const devFrontendProccess = {\n        prefix: devFrontend.logPrefix,\n        action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n          await devFrontend.action(stdout, stderr, signal, frontendPort)\n        },\n      }\n      additionalProcesses.push(devFrontendProccess)\n    } else {\n      proxyTargets.push(devFrontend)\n    }\n  }\n\n  await analytics.reportEvent({config: options.commandConfig})\n\n  if (proxyTargets.length === 0) {\n    await output.concurrent(additionalProcesses)\n  } else {\n    await runConcurrentHTTPProcessesAndPathForwardTraffic(proxyPort, proxyTargets, additionalProcesses)\n  }\n}\n\ninterface DevFrontendTargetOptions extends DevWebOptions {\n  web: Web\n  backendPort: number\n}\n\nfunction devFrontendTarget(options: DevFrontendTargetOptions): ReverseHTTPProxyTarget {\n  const {commands} = options.web.configuration\n  const [cmd, ...args] = commands.dev.split(' ')\n  const env = {\n    SHOPIFY_API_KEY: options.apiKey,\n    SHOPIFY_API_SECRET: options.apiSecret,\n    HOST: options.hostname,\n    SCOPES: options.scopes,\n    BACKEND_PORT: `${options.backendPort}`,\n    NODE_ENV: `development`,\n  }\n\n  return {\n    logPrefix: options.web.configuration.type,\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal, port: number) => {\n      await system.exec(cmd!, args, {\n        cwd: options.web.directory,\n        stdout,\n        stderr,\n        env: {\n          ...process.env,\n          ...env,\n          PORT: `${port}`,\n          FRONTEND_PORT: `${port}`,\n          APP_URL: options.hostname,\n          APP_ENV: 'development',\n          // Note: These are Laravel varaibles for backwards compatibility with 2.0 templates.\n          SERVER_PORT: `${port}`,\n        },\n        signal,\n      })\n    },\n  }\n}\n\nfunction devBackendTarget(web: Web, options: DevWebOptions): output.OutputProcess {\n  const {commands} = web.configuration\n  const [cmd, ...args] = commands.dev.split(' ')\n  const env = {\n    SHOPIFY_API_KEY: options.apiKey,\n    SHOPIFY_API_SECRET: options.apiSecret,\n    HOST: options.hostname,\n    // SERVER_PORT is the convention Artisan uses\n    PORT: `${options.backendPort}`,\n    SERVER_PORT: `${options.backendPort}`,\n    BACKEND_PORT: `${options.backendPort}`,\n    SCOPES: options.scopes,\n    NODE_ENV: `development`,\n  }\n\n  return {\n    prefix: web.configuration.type,\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal) => {\n      await system.exec(cmd!, args, {\n        cwd: web.directory,\n        stdout,\n        stderr,\n        signal,\n        env: {\n          ...process.env,\n          ...env,\n        },\n      })\n    },\n  }\n}\n\nasync function devExtensionsTarget(\n  app: AppInterface,\n  apiKey: string,\n  url: string,\n  storeFqdn: string,\n  subscriptionProductUrl?: string,\n  checkoutCartUrl?: string,\n): Promise<ReverseHTTPProxyTarget> {\n  const cartUrl = await buildCartURLIfNeeded(app.extensions.ui, storeFqdn, checkoutCartUrl)\n  return {\n    logPrefix: 'extensions',\n    pathPrefix: '/extensions',\n    action: async (stdout: Writable, stderr: Writable, signal: error.AbortSignal, port: number) => {\n      await devExtensions({\n        app,\n        extensions: app.extensions.ui,\n        stdout,\n        stderr,\n        signal,\n        url,\n        port,\n        storeFqdn,\n        apiKey,\n        cartUrl,\n        subscriptionProductUrl,\n      })\n    },\n  }\n}\n\n/**\n * To prepare Checkout UI Extensions for dev'ing we need to retrieve a valid product variant ID\n * @param extensions {UIExtension[]} - The UI Extensions to dev\n * @param store {string} - The store FQDN\n */\nasync function buildCartURLIfNeeded(extensions: UIExtension[], store: string, checkoutCartUrl?: string) {\n  const hasUIExtension = extensions.map((ext) => ext.type).includes('checkout_ui_extension')\n  if (!hasUIExtension) return undefined\n  if (checkoutCartUrl) return checkoutCartUrl\n  const variantId = await fetchProductVariant(store)\n  return `/cart/${variantId}:1`\n}\n\nexport default dev\n"]}