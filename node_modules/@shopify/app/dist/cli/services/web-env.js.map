{"version":3,"file":"web-env.js","sourceRoot":"","sources":["../../../src/cli/services/web-env.ts"],"names":[],"mappings":"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","sourcesContent":["import {selectApp} from './app/select-app.js'\nimport {AppInterface} from '../models/app/app.js'\nimport {output, file} from '@shopify/cli-kit'\nimport {patchEnvFile} from '@shopify/cli-kit/node/dot-env'\nimport {diffLines} from 'diff'\n\ntype Format = 'json' | 'text'\ninterface WebEnvOptions {\n  update: boolean\n  envFile: string\n}\n\nexport async function webEnv(app: AppInterface, {update, envFile}: WebEnvOptions): Promise<output.Message> {\n  if (update) {\n    return updateEnvFile(app, envFile)\n  } else {\n    return outputEnv(app, 'text')\n  }\n}\n\nexport async function updateEnvFile(app: AppInterface, envFile: WebEnvOptions['envFile']): Promise<output.Message> {\n  const selectedApp = await selectApp()\n\n  const updatedValues = {\n    SHOPIFY_API_KEY: selectedApp.apiKey,\n    SHOPIFY_API_SECRET: selectedApp.apiSecretKeys[0]?.secret,\n    SCOPES: app.configuration.scopes,\n  }\n\n  if (await file.exists(envFile)) {\n    const envFileContent = await file.read(envFile)\n    const updatedEnvFileContent = patchEnvFile(envFileContent, updatedValues)\n\n    if (updatedEnvFileContent === envFileContent) {\n      return output.content`No changes to ${output.token.path(envFile)}`\n    } else {\n      await file.write(envFile, updatedEnvFileContent)\n\n      const diff = diffLines(envFileContent ?? '', updatedEnvFileContent)\n      return output.content`Updated ${output.token.path(envFile)} to be:\n\n${updatedEnvFileContent}\n\nHere's what changed:\n\n${output.token.linesDiff(diff)}\n  `\n    }\n  } else {\n    const newEnvFileContent = patchEnvFile(null, updatedValues)\n\n    await file.write(envFile, newEnvFileContent)\n\n    return output.content`Created ${output.token.path(envFile)}:\n\n${newEnvFileContent}\n`\n  }\n}\n\nexport async function outputEnv(app: AppInterface, format: Format): Promise<output.Message> {\n  const selectedApp = await selectApp()\n\n  if (format === 'json') {\n    return output.content`${output.token.json({\n      SHOPIFY_API_KEY: selectedApp.apiKey,\n      SHOPIFY_API_SECRET: selectedApp.apiSecretKeys[0]?.secret,\n      SCOPES: app.configuration.scopes,\n    })}`\n  } else {\n    return output.content`\n    ${output.token.green('SHOPIFY_API_KEY')}=${selectedApp.apiKey}\n    ${output.token.green('SHOPIFY_API_SECRET')}=${selectedApp.apiSecretKeys[0]?.secret ?? ''}\n    ${output.token.green('SCOPES')}=${app.configuration.scopes}\n  `\n  }\n}\n"]}