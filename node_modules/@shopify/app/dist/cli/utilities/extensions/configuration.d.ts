import { AppInterface } from '../../models/app/app.js';
import { UIExtension } from '../../models/app/extensions.js';
import { UIExtensionTypes } from '../../constants.js';
export interface ExtensionConfigOptions {
    app: AppInterface;
    apiKey?: string;
    extensions: UIExtension[];
    buildDirectory?: string;
    url?: string;
    port?: number;
    storeFqdn?: string;
    includeResourceURL?: boolean;
    cartUrl?: string;
    subscriptionProductUrl?: string;
}
/**
 * The extensions' Go binary receives the configuration through
 * standard input as a YAML-encoded object. This function returns the
 * Javascript object representing the configuration necessary for building.
 * @param extension {UIExtension} Extension that will be built.
 * @returns
 */
export declare function extensionConfig(options: ExtensionConfigOptions): Promise<unknown>;
export declare function getUIExtensionResourceURL(uiExtensionType: UIExtensionTypes, options: ExtensionConfigOptions): Promise<{
    url: string | undefined;
}>;
export declare function getUIExtensionSurface(uiExtensionType: UIExtensionTypes): "checkout" | "post_purchase" | "customer_accounts" | "pos" | "admin" | "unknown";
