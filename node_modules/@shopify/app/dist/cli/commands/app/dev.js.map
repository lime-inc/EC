{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/dev.ts"],"names":[],"mappings":"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","sourcesContent":["import {appFlags} from '../../flags.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport dev from '../../services/dev.js'\nimport {load as loadApp} from '../../models/app/loader.js'\nimport {Flags} from '@oclif/core'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {path, string, cli} from '@shopify/cli-kit'\n\nexport default class Dev extends Command {\n  static description = 'Run the app'\n\n  static flags = {\n    ...cli.globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: false,\n      description: 'The API key of your app.',\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n    }),\n    store: Flags.string({\n      hidden: false,\n      char: 's',\n      description: 'Development store URL. Must be an existing development store.',\n      env: 'SHOPIFY_FLAG_STORE',\n      parse: (input, _) => Promise.resolve(string.normalizeStoreName(input)),\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n    'skip-dependencies-installation': Flags.boolean({\n      hidden: false,\n      description: 'Skips the installation of dependencies.',\n      env: 'SHOPIFY_FLAG_SKIP_DEPENDENCIES_INSTALLATION',\n      default: false,\n    }),\n    'no-update': Flags.boolean({\n      hidden: false,\n      description: 'Skips the Partners Dashboard URL update step.',\n      env: 'SHOPIFY_FLAG_NO_UPDATE',\n      default: false,\n    }),\n    'subscription-product-url': Flags.string({\n      hidden: false,\n      description: 'Resource URL for subscription UI extension. Format: \"/products/{productId}\"',\n      env: 'SHOPIFY_FLAG_SUBSCRIPTION_PRODUCT_URL',\n    }),\n    'checkout-cart-url': Flags.string({\n      hidden: false,\n      description: 'Resource URL for checkeout UI extension. Format: \"/cart/{productVariantID}:{productQuantity}\"',\n      env: 'SHOPIFY_FLAG_CHECKOUT_CART_URL',\n    }),\n    'tunnel-url': Flags.string({\n      hidden: false,\n      description: 'Override the ngrok tunnel URL. Format: \"https://my-tunnel-url:port\"',\n      env: 'SHOPIFY_FLAG_TUNNEL_URL',\n    }),\n    'no-tunnel': Flags.boolean({\n      hidden: true,\n      description: 'Automatic creation of a tunnel is disabled. Service entry point will listen to localhost instead',\n      env: 'SHOPIFY_FLAG_NO_TUNNEL',\n      default: false,\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(Dev)\n    const directory = flags.path ? path.resolve(flags.path) : process.cwd()\n    const app: AppInterface = await loadApp(directory)\n    const commandConfig = this.config\n\n    await dev({\n      app,\n      apiKey: flags['api-key'],\n      storeFqdn: flags.store,\n      reset: flags.reset,\n      update: !flags['no-update'],\n      skipDependenciesInstallation: flags['skip-dependencies-installation'],\n      commandConfig,\n      subscriptionProductUrl: flags['subscription-product-url'],\n      checkoutCartUrl: flags['checkout-cart-url'],\n      tunnelUrl: flags['tunnel-url'],\n      noTunnel: flags['no-tunnel'],\n    })\n  }\n}\n"]}